version: 2.1

orbs:
  python: circleci/python@2.1.1
  sonarcloud: sonarsource/sonarcloud@2.0.0
  ggshield: gitguardian/ggshield@1.1.4

jobs:
  build:
    docker:
      - image: cimg/python:3.8.4
    steps:
      - checkout            
      - run:
          name: Install Dependencies
          command: |
            pip install coverage pylint pytest ggshield psycopg2 flask json-log-formatter
      - run:
          name: Install Curl
          command: |
            sudo apt-get update
            sudo apt-get install -y curl unzip default-jre sudo git
      - run:
          name: Copy files to /app and list contents
          command: |
            ls
      - run:
          name: Run Tests
          command: |
            pytest tests
      - run:
          name: Informe de cobertura
          command: |
            coverage run -m pytest tests
            coverage report -m
      - run:
          name: Run Linting with pylint
          command: |
            touch app/__init__.py
            pylint app
      - run:
          name: GitGuardian Auth
          command: |
            curl -H "Authorization: Token ${GITGUARDIAN_API_KEY}" \
            https://api.gitguardian.com/v1/health
      - run:
          name: GitGuardian Scan
          command:
            ggshield secret scan commit-range HEAD
      # Generar paquete PyPI
      - run:
          name: Build PyPI Package
          command: |
            python setup.py sdist

      # Guardar el paquete generado como artefacto
      - store_artifacts:
          path: dist
          destination: pypi_package


  deploy:
    docker:
      - image: cimg/python:3.8.4
    steps:
      - checkout
      - restore_cache:
          keys:
            - pypi-package-{{ .Branch }}-{{ .Revision }}

      # Instalar twine para subir el paquete a PyPI
      - run:
          name: Install Twine
          command: |
            pip install twine

      - run:
          name: Subir paquete a PyPI
          command: |
            # Obtener el token de PyPI desde la variable de entorno
            pypi_key=$PYPI_KEY
            # Utilizar el token para subir el paquete a PyPI con twine
            python3 -m twine upload --repository CI-CD-SergiCastillo dist/* -u __token__ -p "$pypi_key"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
